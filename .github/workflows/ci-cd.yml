name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  # Job 1: Frontend Testing
  frontend-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Run frontend tests
      run: |
        cd frontend
        npm test -- --run
        
    - name: Frontend test coverage
      run: |
        cd frontend
        npm test -- --coverage --run

  # Job 2: Backend Testing (Optional - since we don't have backend tests)
  backend-lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
        
    - name: Install backend dependencies
      run: |
        cd backend
        npm ci
        
    - name: Check backend syntax
      run: |
        cd backend
        node -c server.js
        node -c routes/api.js

  # Job 3: Docker Build & Test
  docker-build:
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-lint]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Build backend image
      run: |
        cd backend
        docker build -t fullstack-backend:test .
        
    - name: Build frontend image
      run: |
        cd frontend
        docker build -t fullstack-frontend:test .
        
    - name: Test Docker images
      run: |
        echo "âœ… Backend image built successfully"
        echo "âœ… Frontend image built successfully"
        docker images | grep fullstack

  # Job 4: Security Checks
  security-check:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run security audit - Frontend
      run: |
        cd frontend
        npm audit --audit-level=moderate
        
    - name: Run security audit - Backend
      run: |
        cd backend
        npm audit --audit-level=moderate

  # Job 5: Deployment Ready (for later)
  deployment-ready:
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-lint, docker-build, security-check]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deployment preparation
      run: |
        echo "ðŸš€ All checks passed!"
        echo "âœ… Frontend tests: PASSED"
        echo "âœ… Backend syntax: PASSED"  
        echo "âœ… Docker builds: PASSED"
        echo "âœ… Security audits: PASSED"
        echo "ðŸŽ¯ Ready for deployment to production!"
        
    - name: Store build artifacts (optional)
      uses: actions/upload-artifact@v4
      with:
        name: deployment-ready
        path: |
          frontend/dist/
          backend/
          docker-compose.yml
        retention-days: 30